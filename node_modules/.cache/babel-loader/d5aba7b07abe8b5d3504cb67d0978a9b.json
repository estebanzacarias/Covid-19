{"ast":null,"code":"var _jsxFileName = \"/home/estebanzacarias/mi-github/Covid-19-tracker/src/components/LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport numeral from 'numeral';\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: 'index',\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format('+0,0');\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: 'time',\n      time: {\n        format: 'MM/DD/YY',\n        tooltipFormat: 'll'\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          return numeral(value).format('0a');\n        }\n      }\n    }]\n  }\n};\n\nconst LineGraph = ({\n  casesType = 'cases',\n  ...props\n}) => {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = 'cases') => {\n    let chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    ;\n    return chartData;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => response.json()).then(data => {\n        let chartData = buildChartData(data, casesType);\n        setData(chartData);\n      });\n    };\n\n    fetchData();\n  }, [casesType]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }\n  }, (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/React.createElement(Line, {\n    options: options,\n    data: {\n      datasets: [{\n        backgroundColor: '#CC1034',\n        borderColor: 'black',\n        data: data\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/home/estebanzacarias/mi-github/Covid-19-tracker/src/components/LineGraph.js"],"names":["React","useEffect","useState","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","casesType","props","setData","buildChartData","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetchData","fetch","then","response","json","className","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport numeral from 'numeral';\n\nconst options = {\n    legend: {\n        display: false\n    },\n    elements: {\n        point: {\n            radius: 0\n        }\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n            label: function(tooltipItem, data){\n                 return numeral(tooltipItem.value).format('+0,0');\n            }\n        }\n    },\n    scales: {\n        xAxes: [\n            {\n                type: 'time',\n                time: {\n                   format: 'MM/DD/YY',\n                   tooltipFormat: 'll'\n                }\n            }\n        ],\n        yAxes: [\n            {\n                gridLines: {\n                   display: false \n                },\n                ticks: {\n                    callback: function(value, index, values){\n                        return numeral(value).format('0a');\n                    }\n                }\n            }\n        ]\n    }\n}\n\nconst LineGraph = ({ casesType = 'cases', ...props}) => {\n\n    const [data, setData] = useState({});\n\n    const buildChartData = (data, casesType = 'cases') => {\n        let chartData = [];\n        let lastDataPoint;\n \n        for(let date in data.cases){\n            if (lastDataPoint) {\n                let newDataPoint = {\n                    x: date,\n                    y: data[casesType][date] - lastDataPoint\n                }  \n                chartData.push(newDataPoint);\n            }\n            lastDataPoint = data[casesType][date];\n        };\n        return chartData;\n    }\n\n    useEffect(() => {\n       const fetchData = async () => {\n       await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n                .then((response) => response.json())\n                .then((data) => {\n                    let chartData = buildChartData(data, casesType);\n                    setData(chartData);\n                })\n       };\n       fetchData(); \n    }, [casesType]);\n\n    return (\n       <div className={props.className}>\n        {data?.length > 0 && (\n            <Line options={options} data={{ datasets: [{ backgroundColor: '#CC1034', borderColor: 'black', data: data}]}}/>\n        )}\n       </div>\n    );\n};\n\nexport default LineGraph;"]},"metadata":{},"sourceType":"module"}